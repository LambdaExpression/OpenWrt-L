name: Build x86/64 openwrt

on:
  push:
    paths:
      - "version"
      - ".github/workflows/**"
  schedule:
    - cron: 0 18 1,8,16,24 * *
      
env:
  CONFIG_FILE: config/x86/64.config
  SOURCE_URL: https://github.com/coolsnowwolf/lede.git
  SOURCE_BRANCH: master
  TOOLCHAIN_TAG: Build x86/64 openwrt
  CLASH_BINARY_PLATFORM: amd64
  FIRMWARE_RELEASE_UPLOAD: false
  TZ: Asia/Shanghai

jobs:
  x86_64:
    runs-on: ubuntu-20.04

    steps:
    
      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
          CACHE_NAME:  Initialization Environment ubuntu-20.04
        run: |
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync golang-go
          sudo -E apt-get clean
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          
      - name: Checkout
        uses: actions/checkout@main

      - name: Clone Source Code
        id: clone
        run: |
          df -hT $PWD
          echo "SOURCE_PATH=$PWD" >> $GITHUB_ENV
          echo "::set-output name=SOURCE_PATH::$(echo $PWD)"
          git clone $SOURCE_URL -b $SOURCE_BRANCH workspace/openwrt
          cd workspace/openwrt
          echo "OPENWRT_ROOT_PATH=$PWD" >> $GITHUB_ENV
          echo "::set-output name=OPENWRT_ROOT_PATH::$(echo $PWD)"
          
      - name: Update Ip And 
        run: |
          cd $OPENWRT_ROOT_PATH
          sed -i 's/192.168.1.1/192.168.2.1/g' package/base-files/files/bin/config_generate
          sed -i 's/OpenWrt/OpenWrt-L/g' package/base-files/files/bin/config_generate          
          sed -i 's/UTC/CST-8/g' package/base-files/files/bin/config_generate                    
          
      - name: Install Feeds
        run: |
          cd $OPENWRT_ROOT_PATH
          sed -i '$a src-git kenzo https://github.com/kenzok8/openwrt-packages' feeds.conf.default
          sed -i '$a src-git small https://github.com/kenzok8/small' feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a -f
      
      - name: Generate Toolchain Config
        run: |
          mv $CONFIG_FILE $OPENWRT_ROOT_PATH/.config
          cd $OPENWRT_ROOT_PATH
          make defconfig
            
      - name: Compile firmware
        run: |
          df -hT $PWD
          cd $OPENWRT_ROOT_PATH
          make -j$(nproc)
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          mv $OPENWRT_ROOT_PATH/bin $SOURCE_PATH
          
      - name: Finishing File
        run: |
          tar -zcvf $SOURCE_PATH/bin/targets/x86/64/packages.tar.gz $SOURCE_PATH/bin/targets/x86/64/packages --remove-files
          
      - name: Deliver bin
        uses: actions/upload-artifact@v3
        with:
          name: bin_directory
          path: bin/targets/x86/64/*
          retention-days: 30
          
      - name: Deliver packages.tar.gz
        uses: actions/upload-artifact@v3
        with:
          name: packages.tar.gz
          path: bin/targets/x86/64/packages.tar.gz
          retention-days: 30
          
      - name: Deliver openwrt-x86-64-generic-ext4-combined-efi.img
        uses: actions/upload-artifact@v3
        with:
          name: openwrt-x86-64-generic-ext4-combined-efi.img
          path: bin/targets/x86/64/openwrt-x86-64-generic-ext4-combined-efi.img
          retention-days: 30
          
      - name: Deliver openwrt-x86-64-generic-ext4-combined-efi.vmdk
        uses: actions/upload-artifact@v3
        with:
          name: openwrt-x86-64-generic-ext4-combined-efi.vmdk
          path: bin/targets/x86/64/openwrt-x86-64-generic-ext4-combined-efi.vmdk
          retention-days: 30

